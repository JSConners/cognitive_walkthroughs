Comment 1: Delete the passkey off of your device and try again.Comment 2: This shouldn't be an issue. If the passkey data doesn't reach the relying party within a certain time frame, then the service should recognize that the user hasn't fully created the passkey. They should be able to initiate a new passkey creation flow, and if successful, the relying party will recognize it as a valid passkey. Yes, the user will have 2 passkeys at this point, but only one will be recognized by the relying party, and the other will become stale (cannot be used).Comment 3: Are you just interested in the failure workflow?  My initial guess would be that if there wasn’t full success, then the creation process would be considered incomplete on the server side. In other words, it would be as though you never created one and would be required to initiate the creation process again. This is the same for password or 2FA or whatever.
Lastly, I would say the process isn’t truly complete until the passkey is created and the user actually uses it to sign in at least once.

You might also reach out to 1Password to ask them how they handle failure conditions gracefully.Comment 4: Yeah that's one way but shouldn't the party that is responsible for saving the passkey(windows, android, password managers, etc.) have some check that prevents this from happening. I tried reading the official docs of webauthn but couldn't find anything for this case.Comment 5: How flaky is your internet connection that one should ever worry about this once in a millennia issue? I mean your talking about a perfect down to the millisecond failure of the passkey negotiation process where the client is informing the server about the passkey it created just milliseconds ago. If it happens to you in the wild, play the lottery.Comment 6: I get your point but its just that my QA team wouldn't accept this as a solution.Comment 7: Standards are not going to get that far down into the weeds.

If the connection fails part way through, you have no way of knowing if the other side finished their part or not, so you do not know if you should keep or discard your side.  In that case, the least-harmful course of action is to save what you have and report that manual investigation/cleanup is needed.

The real QA question ought to be if the failure is reported or ignored.Comment 8: Let's assume I started passkey registration process when the device gives me a prompt to save passkey which is almost always a sperate window I disconnect from internet manually for testing purpose then I click save in this flow what should the device do? Since it won't be possible in any way for 3rd party to know if the authentication process was finished. I tried this on windows 11 and windows saved passkey on device while it was obviously unusable on the website.Comment 9: Are you complaining that the device followed your instructions by saving when you told it to?

I would much rather err on the side of keeping bad data than losing good data.